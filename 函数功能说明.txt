1.motor.h
  void PWM_Init(void);      //控制电机的PWM输出初始化（PA6--TIM3_CH1  PA7--TIM3_CH2）
  void Left_PWM(int speed); //左电机PWM调整（0-1000）
  void Right_PWM(int speed);//右电机PWM调整（0-1000）
  void Motor_Init(void);    //电机控制初始化
     转向控制：左电机PC4 PC5  右电机 PC6 PC7
     使能控制 PC8
  //左电机模式
  #define Left_Mode1_H  GPIO_SetBits(GPIOC,GPIO_Pin_4)
  #define Left_Mode1_L  GPIO_ResetBits(GPIOC,GPIO_Pin_4)
  #define Left_Mode2_H  GPIO_SetBits(GPIOC,GPIO_Pin_5)
  #define Left_Mode2_L  GPIO_ResetBits(GPIOC,GPIO_Pin_5)
  //右电机模式
  #define Right_Mode1_H  GPIO_SetBits(GPIOC,GPIO_Pin_6)
  #define Right_Mode1_L  GPIO_ResetBits(GPIOC,GPIO_Pin_6)
  #define Right_Mode2_H  GPIO_SetBits(GPIOC,GPIO_Pin_7)
  #define Right_Mode2_L  GPIO_ResetBits(GPIOC,GPIO_Pin_7)
  void Left_mode_Ahead(void);  //左电机向前
  void Left_mode_Back(void);   //左电机向后
  void Left_mode_stop(void);   //左电机停止
  void Right_mode_Ahead(void); //右电机向前
  void Right_mode_Back(void);  //右电机向后
  void Right_mode_stop(void);  //右电机停止
2.encoder.h
  void Get_Speed(float * Speed_Left_CM_S,float * Speed_Right_CM_S,u32 T);
  void Pwm_Catch_Init(void);
  s32 Get_Right_Speed(void);
  s32 Get_Left_Speed(void);
